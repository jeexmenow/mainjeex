from django.contrib.auth.models import User
from news.models import Author, Category, Post, Comment

1. Создать двух пользователей (с помощью метода User.objects.create_user('username')):
user1 = User.objects.create_user('username1')
user2 = User.objects.create_user('username2')

2. Создать два объекта модели Author, связанные с пользователями:
author_1 = Author.objects.create(user=user1, rating=0)
author_2 = Author.objects.create(user=user2, rating=0)

3. Добавить 4 категории в модель Category:
category1 = Category.objects.create(name='Важное')
category2 = Category.objects.create(name='Валюта')
category3 = Category.objects.create(name='Актуальное')
category4 = Category.objects.create(name='Разное')

4. Добавить 2 статьи и 1 новость:
post1 = Post.objects.create(author=author_1, content_type='статья', title='статья 1', text='текст статьи номер 1', rating=0)
post2 = Post.objects.create(author=author_2, content_type='статья', title='статья 2', text='текст статьи номер 2', rating=0)
news1 = Post.objects.create(author=author_1, content_type='новость', title='новость', text='текст новостей', rating=0)

5. Присвоить им категории (как минимум в одной статье/новости должно быть не меньше 2 категорий):
post1.categories.add(category1, category2)
post2.categories.add(category3)
news1.categories.add(category4)

6. Создать как минимум 4 комментария к разным объектам модели Post (в каждом объекте должен быть как минимум один комментарий):
comment1 = Comment.objects.create(post=post1, user=user1, text='текст комментария 1', rating=0)
comment2 = Comment.objects.create(post=post2, user=user2, text='текст комментария 2', rating=0)
comment3 = Comment.objects.create(post=post1, user=user2, text='текст комментария 3', rating=0)
comment4 = Comment.objects.create(post=news1, user=user1, text='текст комментария 4', rating=0)

7. Применение функций like() и dislike() к объектам для корректировки рейтингов
post1.like()
post2.dislike()
comment3.like()
comment1.dislike()

8. Обновить рейтинги пользователей:
author1.update_rating()
author2.update_rating()


9. Вывести username и рейтинг лучшего пользователя (применяя сортировку и возвращая поля первого объекта):
best_author = Author.objects.order_by('-rating').values('user__username', 'rating').first()
print(best_author['user__username'], best_author['rating'])

10. Вывести дату добавления, username автора, рейтинг, заголовок и превью лучшей статьи, основываясь на лайках/дислайках к этой статье:
print(best_post.created_time, best_post.author.user.username, best_post.rating, best_post.title, best_post.preview())
best_post = Post.objects.filter(content_type='статья').order_by('-rating').first()

11. Вывести все комментарии (дата, пользователь, рейтинг, текст) к этой статье:
comments = Comment.objects.filter(post=post1).values('created_time', 'user__username', 'rating', 'text')
for comment in comments:
    print(comment['created_time'], comment['user__username'], comment['rating'], comment['text'])